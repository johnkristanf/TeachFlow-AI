name: Deploy Teachflow AI to Amazon EC2 (Amazon Linux 2)
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code 
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          curl -fsSL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin/docker-compose
          docker-compose --version



          
      - name: Create SSH Key File 
        run: |
          echo "${{ secrets.EC2_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Debug - List Files in Server Directory
        run: |
          ls -lah 

     
      - name: Build & Push Docker Image using Docker Compose
        run: |
            docker-compose build --no-cache
            docker-compose push 


      - name: Make Server Directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            set -e
            mkdir -p /home/${{ secrets.EC2_USER }}/server/


      - name: Upload docker-compose.yml, .env, and alembic.ini
        run: |
          scp -i private_key.pem -o StrictHostKeyChecking=no docker-compose.yml \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/server/docker-compose.yml

          scp -i private_key.pem -o StrictHostKeyChecking=no .env \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/server/.env

          scp -i private_key.pem -o StrictHostKeyChecking=no alembic.ini \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/server/alembic.ini


      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_KEY }}
            script: |
                docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
                cd server
                docker-compose down || true
                docker-compose pull
                docker-compose up -d --remove-orphans
